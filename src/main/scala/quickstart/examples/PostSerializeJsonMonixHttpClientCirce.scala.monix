package quickstart.examples

import scala.util.chaining._
import util._

import sttp.client3._
import sttp.client3.circe._
import sttp.client3.httpclient.monix.HttpClientMonixBackend
import io.circe.generic.auto._
import monix.eval.Task
import sttp.capabilities.monix.MonixStreams
import sttp.capabilities.WebSockets

object PostSerializeJsonMonixHttpClientCirce extends App {

  line80.green pipe println

  case class Info(x: Int, y: String)

  val monixBackend: Task[SttpBackend[Task, MonixStreams with WebSockets]] =
    HttpClientMonixBackend()

  val postTask: Task[Unit] =
    monixBackend.flatMap { backend =>
      val request: Request[Either[String, String], Any] =
        basicRequest
          .body(Info(91, "abc"))
          .post(uri"https://httpbin.org/post")

      request
        .send(backend)
        .flatMap { response => Task(println(s"""Got ${response.code} response, body:\n${response.body}""")) }
        .guarantee(backend.close())
    }

  import monix.execution.Scheduler.Implicits.global
  postTask.runSyncUnsafe()

  line80.green pipe println
}
